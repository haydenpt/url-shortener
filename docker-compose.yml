version: '3.8'

services:
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      MONGODB_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGODB_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DB}
    volumes:
      - mongodb-data:/data/db
      - ./init-scripts/mongodb/init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro

#  postgres:
#    image: postgres:latest
#    container_name: postgres
#    ports:
#      - 5432:5432
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    volumes:
#      - ./init-scripts/postgres/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
#      - postgres-data:/var/lib/postgresql/data
#
#  kafka1:
#    image: apache/kafka:latest
#    container_name: kafka1
#    networks:
#        - kafka-net
#    ports:
#        - "9092:9092"
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: broker,controller
#      KAFKA_LISTENERS: PLAINTEXT://kafka-1:9092,CONTROLLER://kafka-1:9093
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_NUM_PARTITIONS: 3

volumes:
  mongodb-data:
  postgres-data:

networks:
    kafka-net:
        driver: bridge